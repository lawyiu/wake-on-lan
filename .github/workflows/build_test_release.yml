name: CI/CD for Windows

on: push

jobs:
  build_release:
    runs-on: windows-latest

    steps:
      - name: Get Npm cache path
        id: npm-cache-path
        run: echo "cache-path=$(npm get cache)" >> $env:GITHUB_OUTPUT

      - name: Cache Appium dependencies
        id: cache-appium
        uses: actions/cache@v3
        with:
          path: ${{ steps.npm-cache-path.outputs.cache-path }}
          key: ${{ runner.os }}-appium@2.0.0-beta.46

      - name: Install Appium
        run: |
          npm install -g appium@2.0.0-beta.46
          appium driver install windows

      - name: Setup MSVC environment
        uses: ilammy/msvc-dev-cmd@d8610e2b41c6d0f0c3b4c46dad8df0fd826c68e1 #v1

      - name: Check out Git repository
        uses: actions/checkout@v3

      - name: Get short commit SHA
        run: echo SHORT_SHA=$(git rev-parse --short HEAD) >> $env:GITHUB_ENV

      - name: Install QT
        uses: jurplel/install-qt-action@43ec12788e42f375acfcb2cec059edfb9572fbaa #v3
        with:
          version: 6.*
          cache: true

      - name: Make build directory
        run: mkdir build

      - name: Run CMake
        run: cd build && cmake ..

      - name: Run MSBuild
        run: cd build && msbuild wake_on_lan.sln -property:Configuration=Release

      - name: Gather build artifacts
        run: |
          cd build/Release/
          mkdir wake_on_lan
          mv wake_on_lan.exe wake_on_lan/
          windeployqt --release --no-translations --no-system-d3d-compiler --no-opengl-sw wake_on_lan/wake_on_lan.exe
          Compress-Archive -Path wake_on_lan/ -DestinationPath wake_on_lan-${{ env.SHORT_SHA }}.zip

      - name: Set path to WOL program
        run: echo PROG_PATH=${{ github.workspace }}/build/Release/wake_on_lan/wake_on_lan.exe >> $env:GITHUB_ENV

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Minimize all windows before running tests
        run: |
          $x = New-Object -ComObject Shell.Application;
          $x.minimizeall();

      - name: Run Appium tests
        run: |
          cd tests/
          ./gradlew test

      - uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: test-results
          path: tests/build/test-results/test/*.xml

      - uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: Upload videos
          path: tests/*.mp4

      - name: Release
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5 #v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/Release/wake_on_lan-${{ env.SHORT_SHA }}.zip
          draft: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
